# =============================================================================
# Admin Panel Frontend - Optimized Production Dockerfile
# Multi-stage build for React/Vite application with Nginx serving
# =============================================================================

# Build stage
FROM node:20.11.0-alpine AS builder

# Install build dependencies
RUN apk add --no-cache git

WORKDIR /app

# Copy package files first for better layer caching
COPY package*.json ./

# Install dependencies
RUN npm ci --only=production=false \
    && npm cache clean --force

# Copy source code
COPY . .

# Build the application for production
RUN npm run build

# Production stage - Nginx for serving static files
FROM nginx:1.25-alpine AS production

# Install security tools and runtime dependencies
RUN apk add --no-cache \
    tini \
    curl \
    ca-certificates \
    && rm -rf /var/cache/apk/*

# Create non-root user for security
RUN addgroup -g 1001 -S nginx && \
    adduser -S nginx -u 1001 -G nginx

# Copy built application from builder stage
COPY --from=builder /app/dist /usr/share/nginx/html

# Copy optimized Nginx configuration
COPY docker/nginx.conf /etc/nginx/nginx.conf
COPY docker/default.conf /etc/nginx/conf.d/default.conf
COPY docker/security-headers.conf /etc/nginx/conf.d/security-headers.conf

# Copy health check script
COPY docker/healthcheck.sh /usr/local/bin/healthcheck.sh
RUN chmod +x /usr/local/bin/healthcheck.sh

# Create necessary directories with proper permissions
RUN mkdir -p /var/cache/nginx /var/log/nginx /var/run && \
    touch /var/run/nginx.pid && \
    chown -R nginx:nginx /var/cache/nginx /var/log/nginx /var/run/nginx.pid /usr/share/nginx/html

# Set environment variables
ENV NODE_ENV=production
ENV NGINX_PORT=80

# Switch to non-root user
USER nginx

# Expose port
EXPOSE 80

# Health check
HEALTHCHECK --interval=30s --timeout=10s --start-period=10s --retries=3 \
    CMD /usr/local/bin/healthcheck.sh

# Use tini for proper signal handling
ENTRYPOINT ["tini", "--"]

# Start Nginx
CMD ["nginx", "-g", "daemon off;"]

# Metadata
LABEL maintainer="AI Answer Ninja Team"
LABEL service="admin-panel"
LABEL version="1.0.0"
LABEL description="Admin Panel Frontend for AI Answer Ninja management interface"