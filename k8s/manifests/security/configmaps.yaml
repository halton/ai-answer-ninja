apiVersion: v1
kind: ConfigMap
metadata:
  name: app-config
  namespace: ai-ninja
  labels:
    app.kubernetes.io/name: ai-ninja
    app.kubernetes.io/component: configuration
    app.kubernetes.io/part-of: ai-ninja
data:
  # Environment
  NODE_ENV: "production"
  LOG_LEVEL: "info"
  LOG_FORMAT: "json"
  
  # Service Discovery
  SERVICE_DISCOVERY_ENABLED: "true"
  CONSUL_ENABLED: "false"
  
  # API Configuration
  API_VERSION: "v1"
  API_PREFIX: "/api/v1"
  CORS_ENABLED: "true"
  CORS_ORIGINS: "*"
  
  # Database Configuration
  DB_POOL_MIN: "2"
  DB_POOL_MAX: "20"
  DB_CONNECTION_TIMEOUT: "30000"
  DB_IDLE_TIMEOUT: "10000"
  DB_STATEMENT_TIMEOUT: "30000"
  
  # Redis Configuration
  REDIS_MAX_RETRIES: "3"
  REDIS_RETRY_DELAY: "1000"
  REDIS_CONNECTION_TIMEOUT: "5000"
  REDIS_COMMAND_TIMEOUT: "3000"
  
  # Cache Configuration
  CACHE_TTL: "3600"
  CACHE_MAX_SIZE: "1000"
  ENABLE_CACHE: "true"
  
  # Rate Limiting
  RATE_LIMIT_ENABLED: "true"
  RATE_LIMIT_WINDOW: "60000"
  RATE_LIMIT_MAX_REQUESTS: "100"
  
  # Security
  JWT_EXPIRY: "3600"
  BCRYPT_ROUNDS: "12"
  SESSION_TIMEOUT: "1800"
  
  # Monitoring
  METRICS_ENABLED: "true"
  METRICS_PORT: "9090"
  HEALTH_CHECK_INTERVAL: "30000"
  
  # Feature Flags
  FEATURE_AI_CONVERSATION: "true"
  FEATURE_VOICE_CLONING: "true"
  FEATURE_ANALYTICS: "true"
  FEATURE_SMART_WHITELIST: "true"
  
  # Azure Services
  AZURE_REGION: "eastus2"
  AZURE_OPENAI_VERSION: "2023-12-01-preview"
  AZURE_SPEECH_REGION: "eastus2"
  
  # Audio Processing
  AUDIO_MAX_FILE_SIZE: "50MB"
  AUDIO_ALLOWED_FORMATS: "wav,mp3,m4a"
  AUDIO_SAMPLE_RATE: "16000"
  AUDIO_CHANNELS: "1"
  
  # WebSocket Configuration
  WS_ENABLED: "true"
  WS_PING_INTERVAL: "30000"
  WS_PING_TIMEOUT: "5000"
  WS_MAX_CONNECTIONS: "1000"
  
  # File Upload
  UPLOAD_MAX_FILE_SIZE: "100MB"
  UPLOAD_ALLOWED_TYPES: "audio/wav,audio/mpeg,audio/mp4"
  
  # Timezone
  TZ: "UTC"

---
apiVersion: v1
kind: ConfigMap
metadata:
  name: service-endpoints
  namespace: ai-ninja
  labels:
    app.kubernetes.io/name: ai-ninja
    app.kubernetes.io/component: configuration
data:
  # Core Services
  PHONE_GATEWAY_URL: "http://phone-gateway-service:3001"
  REALTIME_PROCESSOR_URL: "http://realtime-processor-service:3002"
  CONVERSATION_ENGINE_URL: "http://conversation-engine-service:3003"
  PROFILE_ANALYTICS_URL: "http://profile-analytics-service:3004"
  
  # Support Services
  USER_MANAGEMENT_URL: "http://user-management-service:3005"
  SMART_WHITELIST_URL: "http://smart-whitelist-service:3006"
  
  # Platform Services
  CONFIGURATION_SERVICE_URL: "http://configuration-service:3007"
  STORAGE_SERVICE_URL: "http://storage-service:3008"
  MONITORING_SERVICE_URL: "http://monitoring-service:3009"
  
  # Data Layer
  POSTGRES_HOST: "postgres-service"
  POSTGRES_PORT: "5432"
  REDIS_HOST: "redis-service"
  REDIS_PORT: "6379"
  
  # External Services
  AZURE_COMMUNICATION_ENDPOINT: "https://ai-ninja-communication.communication.azure.com"
  AZURE_SPEECH_ENDPOINT: "https://eastus2.api.cognitive.microsoft.com"
  AZURE_OPENAI_ENDPOINT: "https://ai-ninja-openai.openai.azure.com"

---
apiVersion: v1
kind: ConfigMap
metadata:
  name: nginx-config
  namespace: ai-ninja
  labels:
    app.kubernetes.io/name: nginx
    app.kubernetes.io/component: proxy
data:
  nginx.conf: |
    user nginx;
    worker_processes auto;
    error_log /var/log/nginx/error.log notice;
    pid /var/run/nginx.pid;
    
    events {
        worker_connections 1024;
        use epoll;
        multi_accept on;
    }
    
    http {
        include /etc/nginx/mime.types;
        default_type application/octet-stream;
        
        # Logging format
        log_format main '$remote_addr - $remote_user [$time_local] "$request" '
                        '$status $body_bytes_sent "$http_referer" '
                        '"$http_user_agent" "$http_x_forwarded_for"';
        
        access_log /var/log/nginx/access.log main;
        
        # Basic settings
        sendfile on;
        tcp_nopush on;
        tcp_nodelay on;
        keepalive_timeout 65;
        types_hash_max_size 2048;
        client_max_body_size 100M;
        
        # Gzip compression
        gzip on;
        gzip_vary on;
        gzip_min_length 10240;
        gzip_proxied expired no-cache no-store private must-revalidate auth;
        gzip_types
            text/plain
            text/css
            text/xml
            text/javascript
            application/x-javascript
            application/xml+rss
            application/javascript
            application/json;
        
        # Rate limiting
        limit_req_zone $binary_remote_addr zone=api:10m rate=10r/s;
        limit_req_zone $binary_remote_addr zone=websocket:10m rate=20r/s;
        
        # Upstream definitions
        upstream phone_gateway {
            least_conn;
            server phone-gateway-service:3001 max_fails=3 fail_timeout=30s;
        }
        
        upstream realtime_processor {
            ip_hash;
            server realtime-processor-service:3002 max_fails=3 fail_timeout=30s;
        }
        
        upstream realtime_websocket {
            ip_hash;
            server realtime-processor-service:8080 max_fails=3 fail_timeout=30s;
        }
        
        upstream conversation_engine {
            least_conn;
            server conversation-engine-service:3003 max_fails=3 fail_timeout=30s;
        }
        
        # Main server block
        server {
            listen 80;
            listen [::]:80;
            server_name _;
            
            # Security headers
            add_header X-Frame-Options DENY always;
            add_header X-Content-Type-Options nosniff always;
            add_header X-XSS-Protection "1; mode=block" always;
            add_header Referrer-Policy "strict-origin-when-cross-origin" always;
            
            # Health check endpoint
            location /health {
                access_log off;
                return 200 "healthy\n";
                add_header Content-Type text/plain;
            }
            
            # API routes with rate limiting
            location /api/v1/phone-gateway/ {
                limit_req zone=api burst=20 nodelay;
                proxy_pass http://phone_gateway/;
                include /etc/nginx/proxy_params;
            }
            
            location /api/v1/realtime/ {
                limit_req zone=api burst=50 nodelay;
                proxy_pass http://realtime_processor/;
                include /etc/nginx/proxy_params;
            }
            
            location /api/v1/conversation/ {
                limit_req zone=api burst=30 nodelay;
                proxy_pass http://conversation_engine/;
                include /etc/nginx/proxy_params;
            }
            
            # WebSocket proxy for real-time communication
            location /ws/ {
                limit_req zone=websocket burst=10 nodelay;
                proxy_pass http://realtime_websocket;
                proxy_http_version 1.1;
                proxy_set_header Upgrade $http_upgrade;
                proxy_set_header Connection "upgrade";
                proxy_set_header Host $host;
                proxy_set_header X-Real-IP $remote_addr;
                proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
                proxy_set_header X-Forwarded-Proto $scheme;
                proxy_read_timeout 86400;
                proxy_send_timeout 86400;
                proxy_connect_timeout 30;
            }
            
            # Static file serving
            location /static/ {
                alias /usr/share/nginx/html/static/;
                expires 1y;
                add_header Cache-Control "public, immutable";
                add_header Vary "Accept-Encoding";
            }
        }
    }
    
  proxy_params: |
    proxy_set_header Host $http_host;
    proxy_set_header X-Real-IP $remote_addr;
    proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    proxy_set_header X-Forwarded-Proto $scheme;
    proxy_connect_timeout 30s;
    proxy_send_timeout 60s;
    proxy_read_timeout 60s;
    proxy_buffering on;
    proxy_buffer_size 4k;
    proxy_buffers 8 4k;
    proxy_busy_buffers_size 8k;

---
apiVersion: v1
kind: ConfigMap
metadata:
  name: monitoring-config
  namespace: ai-ninja
  labels:
    app.kubernetes.io/name: monitoring
    app.kubernetes.io/component: configuration
data:
  # Prometheus Configuration
  PROMETHEUS_RETENTION: "15d"
  PROMETHEUS_STORAGE_SIZE: "50Gi"
  PROMETHEUS_SCRAPE_INTERVAL: "15s"
  PROMETHEUS_EVALUATION_INTERVAL: "15s"
  
  # Grafana Configuration
  GRAFANA_ADMIN_USER: "admin"
  GRAFANA_STORAGE_SIZE: "10Gi"
  
  # Alertmanager Configuration
  ALERT_WEBHOOK_URL: "https://hooks.slack.com/services/YOUR/SLACK/WEBHOOK"
  ALERT_EMAIL_FROM: "alerts@ai-ninja.com"
  ALERT_EMAIL_TO: "ops@ai-ninja.com"
  
  # Logging
  LOG_RETENTION_DAYS: "30"
  LOG_LEVEL: "info"
  
  # Metrics Collection
  COLLECT_CUSTOM_METRICS: "true"
  COLLECT_JVM_METRICS: "false"
  COLLECT_NODEJS_METRICS: "true"
  COLLECT_PYTHON_METRICS: "true"