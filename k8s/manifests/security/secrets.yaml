# WARNING: This file contains secret templates. 
# In production, these should be managed by external secret management systems
# such as AWS Secrets Manager, Azure Key Vault, or HashiCorp Vault

apiVersion: v1
kind: Secret
metadata:
  name: app-secrets
  namespace: ai-ninja
  labels:
    app.kubernetes.io/name: ai-ninja
    app.kubernetes.io/component: secrets
type: Opaque
stringData:
  # JWT Configuration
  jwt-secret: "your-super-secret-jwt-key-change-this-in-production"
  jwt-refresh-secret: "your-super-secret-refresh-key-change-this-in-production"
  
  # Redis Connection
  redis-url: "redis://redis-service:6379"
  redis-password: "your-redis-password-change-this"
  
  # Session Management
  session-secret: "your-session-secret-change-this-in-production"
  
  # Encryption Keys
  encryption-key: "your-32-character-encryption-key-change-this"
  
  # API Keys
  internal-api-key: "your-internal-api-key-change-this"
  webhook-secret: "your-webhook-secret-change-this"

---
apiVersion: v1
kind: Secret
metadata:
  name: db-secrets
  namespace: ai-ninja
  labels:
    app.kubernetes.io/name: ai-ninja
    app.kubernetes.io/component: database-secrets
type: Opaque
stringData:
  # PostgreSQL Configuration
  postgres-host: "postgres-service"
  postgres-port: "5432"
  postgres-db: "ai_ninja_main"
  postgres-user: "ai_ninja_user"
  postgres-password: "your-postgres-password-change-this"
  
  # Connection URLs
  postgres-url: "postgresql://ai_ninja_user:your-postgres-password-change-this@postgres-service:5432/ai_ninja_main"
  postgres-exporter-url: "postgresql://ai_ninja_user:your-postgres-password-change-this@localhost:5432/ai_ninja_main?sslmode=disable"
  
  # Analytics Database
  analytics-postgres-url: "postgresql://analytics_user:analytics-password-change-this@postgres-service:5432/ai_ninja_analytics"
  
  # Read-only user for monitoring
  readonly-postgres-url: "postgresql://readonly_user:readonly-password-change-this@postgres-service:5432/ai_ninja_main"

---
apiVersion: v1
kind: Secret
metadata:
  name: azure-secrets
  namespace: ai-ninja
  labels:
    app.kubernetes.io/name: ai-ninja
    app.kubernetes.io/component: azure-secrets
type: Opaque
stringData:
  # Azure Communication Services
  communication-connection-string: "endpoint=https://your-acs-resource.communication.azure.com/;accesskey=your-access-key"
  communication-phone-number: "+1234567890"
  
  # Azure Speech Services
  speech-key: "your-speech-service-key"
  speech-region: "eastus2"
  speech-endpoint: "https://eastus2.api.cognitive.microsoft.com"
  
  # Azure OpenAI
  openai-endpoint: "https://your-openai-resource.openai.azure.com"
  openai-key: "your-openai-key"
  openai-deployment-name: "gpt-4"
  
  # Azure Storage
  storage-account-name: "your-storage-account"
  storage-account-key: "your-storage-account-key"
  storage-connection-string: "DefaultEndpointsProtocol=https;AccountName=your-storage-account;AccountKey=your-storage-account-key;EndpointSuffix=core.windows.net"
  
  # Azure Key Vault (for enhanced security)
  keyvault-url: "https://your-keyvault.vault.azure.net/"
  keyvault-client-id: "your-client-id"
  keyvault-client-secret: "your-client-secret"
  keyvault-tenant-id: "your-tenant-id"

---
apiVersion: v1
kind: Secret
metadata:
  name: monitoring-secrets
  namespace: ai-ninja
  labels:
    app.kubernetes.io/name: monitoring
    app.kubernetes.io/component: monitoring-secrets
type: Opaque
stringData:
  # Grafana Admin Credentials
  grafana-admin-password: "your-grafana-admin-password-change-this"
  
  # Prometheus Basic Auth (if enabled)
  prometheus-username: "prometheus"
  prometheus-password: "your-prometheus-password-change-this"
  
  # Alertmanager Configuration
  alertmanager-slack-api-url: "https://hooks.slack.com/services/YOUR/SLACK/WEBHOOK"
  alertmanager-email-username: "alerts@ai-ninja.com"
  alertmanager-email-password: "your-email-password"
  
  # External Monitoring Services
  datadog-api-key: "your-datadog-api-key-if-using"
  newrelic-license-key: "your-newrelic-license-key-if-using"

---
apiVersion: v1
kind: Secret
metadata:
  name: tls-secrets
  namespace: ai-ninja
  labels:
    app.kubernetes.io/name: ai-ninja
    app.kubernetes.io/component: tls
type: kubernetes.io/tls
data:
  # TLS Certificate for HTTPS (base64 encoded)
  # Generate using: kubectl create secret tls tls-secrets --cert=path/to/tls.crt --key=path/to/tls.key
  tls.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0t...  # Your base64 encoded certificate
  tls.key: LS0tLS1CRUdJTiBQUklWQVRFIEtFWS0tLS0t...  # Your base64 encoded private key

---
# External Secrets Operator Configuration (if using)
apiVersion: external-secrets.io/v1beta1
kind: SecretStore
metadata:
  name: azure-keyvault-store
  namespace: ai-ninja
spec:
  provider:
    azurekv:
      vaultUrl: "https://your-keyvault.vault.azure.net"
      authType: ServicePrincipal
      serviceAccountRef:
        name: azure-keyvault-sa
      auth:
        secretRef:
          clientId:
            name: azure-secrets
            key: keyvault-client-id
          clientSecret:
            name: azure-secrets
            key: keyvault-client-secret
        tenantId: "your-tenant-id"

---
# Example External Secret (if using External Secrets Operator)
apiVersion: external-secrets.io/v1beta1
kind: ExternalSecret
metadata:
  name: azure-secrets-external
  namespace: ai-ninja
spec:
  refreshInterval: 1h
  secretStoreRef:
    name: azure-keyvault-store
    kind: SecretStore
  target:
    name: azure-secrets-from-kv
    creationPolicy: Owner
  data:
  - secretKey: speech-key
    remoteRef:
      key: azure-speech-key
  - secretKey: openai-key
    remoteRef:
      key: azure-openai-key
  - secretKey: storage-account-key
    remoteRef:
      key: azure-storage-key

---
# Service Account for Azure Key Vault integration
apiVersion: v1
kind: ServiceAccount
metadata:
  name: azure-keyvault-sa
  namespace: ai-ninja
  annotations:
    azure.workload.identity/client-id: "your-client-id"
    azure.workload.identity/tenant-id: "your-tenant-id"
  labels:
    azure.workload.identity/use: "true"