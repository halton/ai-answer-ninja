# =============================================================================
# Core Services - Service Definitions
# LoadBalancer, ClusterIP, and headless services for core components
# =============================================================================

# =============================================================================
# Phone Gateway Service
# =============================================================================

apiVersion: v1
kind: Service
metadata:
  name: phone-gateway-service
  namespace: ai-ninja
  labels:
    app: phone-gateway
    tier: core
    app.kubernetes.io/name: phone-gateway
    app.kubernetes.io/component: gateway
  annotations:
    service.beta.kubernetes.io/azure-load-balancer-type: "external"
    service.beta.kubernetes.io/azure-load-balancer-health-probe-request-path: "/health"
    prometheus.io/scrape: "true"
    prometheus.io/port: "3001"
    prometheus.io/path: "/metrics"
spec:
  type: LoadBalancer
  selector:
    app: phone-gateway
    tier: core
  ports:
  - name: http
    port: 80
    targetPort: 3001
    protocol: TCP
  - name: https
    port: 443
    targetPort: 3001
    protocol: TCP
  - name: metrics
    port: 9090
    targetPort: 3001
    protocol: TCP
  sessionAffinity: ClientIP
  sessionAffinityConfig:
    clientIP:
      timeoutSeconds: 300
  loadBalancerSourceRanges:
  - 0.0.0.0/0  # Restrict this in production

---
# Internal ClusterIP service for phone gateway
apiVersion: v1
kind: Service
metadata:
  name: phone-gateway-internal
  namespace: ai-ninja
  labels:
    app: phone-gateway
    tier: core
    service-type: internal
spec:
  type: ClusterIP
  selector:
    app: phone-gateway
    tier: core
  ports:
  - name: http
    port: 3001
    targetPort: 3001
    protocol: TCP

---
# =============================================================================
# Realtime Processor Service
# =============================================================================

apiVersion: v1
kind: Service
metadata:
  name: realtime-processor-service
  namespace: ai-ninja
  labels:
    app: realtime-processor
    tier: core
    app.kubernetes.io/name: realtime-processor
    app.kubernetes.io/component: processor
  annotations:
    service.beta.kubernetes.io/azure-load-balancer-type: "external"
    service.beta.kubernetes.io/azure-load-balancer-health-probe-request-path: "/health"
    prometheus.io/scrape: "true"
    prometheus.io/port: "3002"
    prometheus.io/path: "/metrics"
spec:
  type: LoadBalancer
  selector:
    app: realtime-processor
    tier: core
  ports:
  - name: http
    port: 80
    targetPort: 3002
    protocol: TCP
  - name: https
    port: 443
    targetPort: 3002
    protocol: TCP
  - name: websocket
    port: 8080
    targetPort: 8080
    protocol: TCP
  - name: websocket-ssl
    port: 8443
    targetPort: 8080
    protocol: TCP
  sessionAffinity: ClientIP
  sessionAffinityConfig:
    clientIP:
      timeoutSeconds: 600  # Longer for WebSocket connections
  loadBalancerSourceRanges:
  - 0.0.0.0/0  # Restrict this in production

---
# Internal ClusterIP service for realtime processor
apiVersion: v1
kind: Service
metadata:
  name: realtime-processor-internal
  namespace: ai-ninja
  labels:
    app: realtime-processor
    tier: core
    service-type: internal
spec:
  type: ClusterIP
  selector:
    app: realtime-processor
    tier: core
  ports:
  - name: http
    port: 3002
    targetPort: 3002
    protocol: TCP
  - name: websocket
    port: 8080
    targetPort: 8080
    protocol: TCP

---
# =============================================================================
# Conversation Engine Service
# =============================================================================

apiVersion: v1
kind: Service
metadata:
  name: conversation-engine-service
  namespace: ai-ninja
  labels:
    app: conversation-engine
    tier: core
    app.kubernetes.io/name: conversation-engine
    app.kubernetes.io/component: ai-engine
  annotations:
    prometheus.io/scrape: "true"
    prometheus.io/port: "3003"
    prometheus.io/path: "/metrics"
spec:
  type: ClusterIP
  selector:
    app: conversation-engine
    tier: core
  ports:
  - name: http
    port: 3003
    targetPort: 3003
    protocol: TCP
  sessionAffinity: None

---
# Headless service for conversation engine (for StatefulSet if needed)
apiVersion: v1
kind: Service
metadata:
  name: conversation-engine-headless
  namespace: ai-ninja
  labels:
    app: conversation-engine
    tier: core
    service-type: headless
spec:
  type: ClusterIP
  clusterIP: None
  selector:
    app: conversation-engine
    tier: core
  ports:
  - name: http
    port: 3003
    targetPort: 3003
    protocol: TCP

---
# =============================================================================
# Profile Analytics Service
# =============================================================================

apiVersion: v1
kind: Service
metadata:
  name: profile-analytics-service
  namespace: ai-ninja
  labels:
    app: profile-analytics
    tier: core
    app.kubernetes.io/name: profile-analytics
    app.kubernetes.io/component: analytics
  annotations:
    prometheus.io/scrape: "true"
    prometheus.io/port: "3004"
    prometheus.io/path: "/metrics"
spec:
  type: ClusterIP
  selector:
    app: profile-analytics
    tier: core
  ports:
  - name: http
    port: 3004
    targetPort: 3004
    protocol: TCP
  sessionAffinity: None

---
# Headless service for profile analytics (for StatefulSet if needed)
apiVersion: v1
kind: Service
metadata:
  name: profile-analytics-headless
  namespace: ai-ninja
  labels:
    app: profile-analytics
    tier: core
    service-type: headless
spec:
  type: ClusterIP
  clusterIP: None
  selector:
    app: profile-analytics
    tier: core
  ports:
  - name: http
    port: 3004
    targetPort: 3004
    protocol: TCP

---
# =============================================================================
# Support Services
# =============================================================================

# User Management Service
apiVersion: v1
kind: Service
metadata:
  name: user-management-service
  namespace: ai-ninja
  labels:
    app: user-management
    tier: support
    app.kubernetes.io/name: user-management
    app.kubernetes.io/component: auth
  annotations:
    prometheus.io/scrape: "true"
    prometheus.io/port: "3005"
    prometheus.io/path: "/metrics"
spec:
  type: ClusterIP
  selector:
    app: user-management
    tier: support
  ports:
  - name: http
    port: 3005
    targetPort: 3005
    protocol: TCP

---
# Smart Whitelist Service
apiVersion: v1
kind: Service
metadata:
  name: smart-whitelist-service
  namespace: ai-ninja
  labels:
    app: smart-whitelist
    tier: support
    app.kubernetes.io/name: smart-whitelist
    app.kubernetes.io/component: filtering
  annotations:
    prometheus.io/scrape: "true"
    prometheus.io/port: "3006"
    prometheus.io/path: "/metrics"
spec:
  type: ClusterIP
  selector:
    app: smart-whitelist
    tier: support
  ports:
  - name: http
    port: 3006
    targetPort: 3006
    protocol: TCP

---
# =============================================================================
# Platform Services
# =============================================================================

# Configuration Service
apiVersion: v1
kind: Service
metadata:
  name: configuration-service
  namespace: ai-ninja
  labels:
    app: configuration
    tier: platform
    app.kubernetes.io/name: configuration
    app.kubernetes.io/component: config
  annotations:
    prometheus.io/scrape: "true"
    prometheus.io/port: "3007"
    prometheus.io/path: "/metrics"
spec:
  type: ClusterIP
  selector:
    app: configuration
    tier: platform
  ports:
  - name: http
    port: 3007
    targetPort: 3007
    protocol: TCP

---
# Storage Service
apiVersion: v1
kind: Service
metadata:
  name: storage-service
  namespace: ai-ninja
  labels:
    app: storage
    tier: platform
    app.kubernetes.io/name: storage
    app.kubernetes.io/component: storage
  annotations:
    prometheus.io/scrape: "true"
    prometheus.io/port: "3008"
    prometheus.io/path: "/metrics"
spec:
  type: ClusterIP
  selector:
    app: storage
    tier: platform
  ports:
  - name: http
    port: 3008
    targetPort: 3008
    protocol: TCP

---
# Monitoring Service
apiVersion: v1
kind: Service
metadata:
  name: monitoring-service
  namespace: ai-ninja
  labels:
    app: monitoring
    tier: platform
    app.kubernetes.io/name: monitoring
    app.kubernetes.io/component: observability
  annotations:
    prometheus.io/scrape: "true"
    prometheus.io/port: "3009"
    prometheus.io/path: "/metrics"
spec:
  type: ClusterIP
  selector:
    app: monitoring
    tier: platform
  ports:
  - name: http
    port: 3009
    targetPort: 3009
    protocol: TCP
  - name: prometheus
    port: 9090
    targetPort: 9090
    protocol: TCP

---
# =============================================================================
# Data Layer Services
# =============================================================================

# PostgreSQL Primary Service
apiVersion: v1
kind: Service
metadata:
  name: postgres-primary-service
  namespace: ai-ninja
  labels:
    app: postgres
    tier: data
    role: primary
    app.kubernetes.io/name: postgres
    app.kubernetes.io/component: database
spec:
  type: ClusterIP
  selector:
    app: postgres
    tier: data
    role: primary
  ports:
  - name: postgres
    port: 5432
    targetPort: 5432
    protocol: TCP

---
# PostgreSQL Replica Service (Read-only)
apiVersion: v1
kind: Service
metadata:
  name: postgres-replica-service
  namespace: ai-ninja
  labels:
    app: postgres
    tier: data
    role: replica
    app.kubernetes.io/name: postgres
    app.kubernetes.io/component: database
spec:
  type: ClusterIP
  selector:
    app: postgres
    tier: data
    role: replica
  ports:
  - name: postgres
    port: 5432
    targetPort: 5432
    protocol: TCP

---
# Redis Cluster Service
apiVersion: v1
kind: Service
metadata:
  name: redis-cluster-service
  namespace: ai-ninja
  labels:
    app: redis
    tier: data
    app.kubernetes.io/name: redis
    app.kubernetes.io/component: cache
  annotations:
    prometheus.io/scrape: "true"
    prometheus.io/port: "9121"
    prometheus.io/path: "/metrics"
spec:
  type: ClusterIP
  selector:
    app: redis
    tier: data
  ports:
  - name: redis
    port: 6379
    targetPort: 6379
    protocol: TCP
  - name: metrics
    port: 9121
    targetPort: 9121
    protocol: TCP

---
# Redis Headless Service (for StatefulSet)
apiVersion: v1
kind: Service
metadata:
  name: redis-cluster-headless
  namespace: ai-ninja
  labels:
    app: redis
    tier: data
    service-type: headless
spec:
  type: ClusterIP
  clusterIP: None
  selector:
    app: redis
    tier: data
  ports:
  - name: redis
    port: 6379
    targetPort: 6379
    protocol: TCP

---
# =============================================================================
# External Services Definitions (for monitoring and observability)
# =============================================================================

# Prometheus Service
apiVersion: v1
kind: Service
metadata:
  name: prometheus-service
  namespace: ai-ninja
  labels:
    app: prometheus
    tier: monitoring
    app.kubernetes.io/name: prometheus
    app.kubernetes.io/component: metrics
spec:
  type: ClusterIP
  selector:
    app: prometheus
    tier: monitoring
  ports:
  - name: http
    port: 9090
    targetPort: 9090
    protocol: TCP

---
# Grafana Service
apiVersion: v1
kind: Service
metadata:
  name: grafana-service
  namespace: ai-ninja
  labels:
    app: grafana
    tier: monitoring
    app.kubernetes.io/name: grafana
    app.kubernetes.io/component: visualization
spec:
  type: ClusterIP
  selector:
    app: grafana
    tier: monitoring
  ports:
  - name: http
    port: 3000
    targetPort: 3000
    protocol: TCP

---
# Jaeger Service
apiVersion: v1
kind: Service
metadata:
  name: jaeger-service
  namespace: ai-ninja
  labels:
    app: jaeger
    tier: monitoring
    app.kubernetes.io/name: jaeger
    app.kubernetes.io/component: tracing
spec:
  type: ClusterIP
  selector:
    app: jaeger
    tier: monitoring
  ports:
  - name: jaeger-ui
    port: 16686
    targetPort: 16686
    protocol: TCP
  - name: jaeger-collector
    port: 14268
    targetPort: 14268
    protocol: TCP
  - name: jaeger-agent
    port: 6831
    targetPort: 6831
    protocol: UDP
  - name: jaeger-agent-compact
    port: 6832
    targetPort: 6832
    protocol: UDP