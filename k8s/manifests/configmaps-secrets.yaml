# =============================================================================
# ConfigMaps and Secrets for AI Answer Ninja
# Centralized configuration management with environment-specific settings
# =============================================================================

# =============================================================================
# Common Application Configuration
# =============================================================================

apiVersion: v1
kind: ConfigMap
metadata:
  name: ai-ninja-app-config
  namespace: ai-ninja
  labels:
    app: ai-ninja
    tier: platform
data:
  # Global application settings
  NODE_ENV: "production"
  LOG_LEVEL: "info"
  TZ: "UTC"
  
  # Feature flags
  ENABLE_METRICS: "true"
  ENABLE_TRACING: "true"
  ENABLE_DEBUG_ENDPOINTS: "false"
  ENABLE_RATE_LIMITING: "true"
  ENABLE_CACHING: "true"
  
  # Performance settings
  MAX_REQUEST_SIZE: "10mb"
  REQUEST_TIMEOUT: "30000"
  WORKER_THREADS: "4"
  
  # Security settings
  CORS_ORIGIN: "https://admin.ai-ninja.com,https://app.ai-ninja.com"
  SESSION_DURATION: "3600"
  PASSWORD_MIN_LENGTH: "8"
  
  # Rate limiting
  RATE_LIMIT_WINDOW: "900000"  # 15 minutes
  RATE_LIMIT_MAX: "100"
  
  # Cache settings
  CACHE_TTL: "3600"
  CACHE_MAX_SIZE: "1000"

---
# =============================================================================
# Database Configuration
# =============================================================================

apiVersion: v1
kind: ConfigMap
metadata:
  name: ai-ninja-database-config
  namespace: ai-ninja
  labels:
    app: ai-ninja
    tier: data
data:
  # PostgreSQL settings
  POSTGRES_DB: "ai_ninja"
  POSTGRES_HOST: "postgres-primary-service"
  POSTGRES_PORT: "5432"
  POSTGRES_READ_HOST: "postgres-replica-service"
  POSTGRES_READ_PORT: "5432"
  POSTGRES_MAX_CONNECTIONS: "20"
  POSTGRES_IDLE_TIMEOUT: "30000"
  POSTGRES_CONNECTION_TIMEOUT: "60000"
  
  # Redis settings
  REDIS_HOST: "redis-cluster-service"
  REDIS_PORT: "6379"
  REDIS_DB: "0"
  REDIS_MAX_RETRIES: "3"
  REDIS_RETRY_DELAY: "1000"
  REDIS_CONNECTION_TIMEOUT: "5000"
  REDIS_COMMAND_TIMEOUT: "5000"

---
# =============================================================================
# Service Discovery Configuration
# =============================================================================

apiVersion: v1
kind: ConfigMap
metadata:
  name: ai-ninja-service-discovery
  namespace: ai-ninja
  labels:
    app: ai-ninja
    tier: platform
data:
  # Core services
  PHONE_GATEWAY_URL: "http://phone-gateway-service:3001"
  REALTIME_PROCESSOR_URL: "http://realtime-processor-service:3002"
  CONVERSATION_ENGINE_URL: "http://conversation-engine-service:3003"
  PROFILE_ANALYTICS_URL: "http://profile-analytics-service:3004"
  
  # Support services
  USER_MANAGEMENT_URL: "http://user-management-service:3005"
  SMART_WHITELIST_URL: "http://smart-whitelist-service:3006"
  
  # Platform services
  CONFIGURATION_URL: "http://configuration-service:3007"
  STORAGE_URL: "http://storage-service:3008"
  MONITORING_URL: "http://monitoring-service:3009"
  
  # External monitoring
  PROMETHEUS_URL: "http://prometheus-service:9090"
  GRAFANA_URL: "http://grafana-service:3000"
  JAEGER_URL: "http://jaeger-service:16686"

---
# =============================================================================
# Azure Services Configuration
# =============================================================================

apiVersion: v1
kind: ConfigMap
metadata:
  name: ai-ninja-azure-config
  namespace: ai-ninja
  labels:
    app: ai-ninja
    tier: platform
data:
  # Azure regions and endpoints
  AZURE_REGION: "eastus2"
  AZURE_SPEECH_REGION: "eastus2"
  AZURE_OPENAI_REGION: "eastus2"
  AZURE_TEXT_ANALYTICS_REGION: "eastus2"
  AZURE_STORAGE_REGION: "eastus2"
  
  # Azure OpenAI settings
  AZURE_OPENAI_API_VERSION: "2023-12-01-preview"
  AZURE_OPENAI_MODEL: "gpt-4"
  AZURE_OPENAI_MAX_TOKENS: "1000"
  AZURE_OPENAI_TEMPERATURE: "0.7"
  
  # Azure Speech settings
  AZURE_SPEECH_API_VERSION: "v1.0"
  AZURE_SPEECH_LANGUAGE: "zh-CN"
  AZURE_SPEECH_VOICE: "zh-CN-XiaoxiaoNeural"
  
  # Azure Text Analytics settings
  AZURE_TEXT_ANALYTICS_API_VERSION: "v3.1"
  
  # Azure Storage settings
  AZURE_STORAGE_CONTAINER: "ai-ninja-data"
  AZURE_STORAGE_BACKUP_CONTAINER: "ai-ninja-backups"

---
# =============================================================================
# Monitoring and Observability Configuration
# =============================================================================

apiVersion: v1
kind: ConfigMap
metadata:
  name: ai-ninja-monitoring-config
  namespace: ai-ninja
  labels:
    app: ai-ninja
    tier: platform
data:
  # Metrics collection
  METRICS_ENABLED: "true"
  METRICS_PORT: "9090"
  METRICS_PATH: "/metrics"
  METRICS_INTERVAL: "15s"
  
  # Tracing settings
  TRACING_ENABLED: "true"
  TRACING_SAMPLE_RATE: "0.1"
  JAEGER_ENDPOINT: "http://jaeger-collector:14268/api/traces"
  TRACE_TIMEOUT: "10s"
  
  # Logging settings
  LOG_FORMAT: "json"
  LOG_TIMESTAMP: "true"
  LOG_CALLER: "true"
  LOG_STACK_TRACE: "error"
  
  # Health check settings
  HEALTH_CHECK_INTERVAL: "30s"
  HEALTH_CHECK_TIMEOUT: "10s"
  HEALTH_CHECK_RETRIES: "3"
  
  # Alerting settings
  ALERT_MANAGER_URL: "http://alertmanager:9093"
  ALERT_ENABLED: "true"
  ALERT_WEBHOOK_TIMEOUT: "30s"

---
# =============================================================================
# Application Secrets (these should be managed externally in production)
# =============================================================================

apiVersion: v1
kind: Secret
metadata:
  name: ai-ninja-app-secrets
  namespace: ai-ninja
  labels:
    app: ai-ninja
    tier: platform
type: Opaque
stringData:
  # JWT secrets
  JWT_SECRET: "your-super-secret-jwt-key-change-this-in-production"
  JWT_REFRESH_SECRET: "your-super-secret-jwt-refresh-key-change-this-in-production"
  
  # Database secrets
  POSTGRES_PASSWORD: "your-postgres-password"
  POSTGRES_REPLICATION_PASSWORD: "your-postgres-replication-password"
  REDIS_PASSWORD: "your-redis-password"
  
  # Session secrets
  SESSION_SECRET: "your-session-secret-key"
  ENCRYPTION_KEY: "your-encryption-key-32-characters"
  
  # API keys for internal services
  INTERNAL_API_KEY: "your-internal-api-key"
  WEBHOOK_SECRET: "your-webhook-secret"

---
# =============================================================================
# Azure Services Secrets
# =============================================================================

apiVersion: v1
kind: Secret
metadata:
  name: ai-ninja-azure-secrets
  namespace: ai-ninja
  labels:
    app: ai-ninja
    tier: platform
type: Opaque
stringData:
  # Azure Communication Services
  AZURE_COMMUNICATION_CONNECTION_STRING: "endpoint=https://your-acs.communication.azure.com/;accesskey=your-access-key"
  
  # Azure Speech Services
  AZURE_SPEECH_KEY: "your-azure-speech-key"
  
  # Azure OpenAI
  AZURE_OPENAI_KEY: "your-azure-openai-key"
  AZURE_OPENAI_ENDPOINT: "https://your-openai-instance.openai.azure.com/"
  
  # Azure Text Analytics
  AZURE_TEXT_ANALYTICS_KEY: "your-azure-text-analytics-key"
  AZURE_TEXT_ANALYTICS_ENDPOINT: "https://your-text-analytics.cognitiveservices.azure.com/"
  
  # Azure Storage
  AZURE_STORAGE_CONNECTION_STRING: "DefaultEndpointsProtocol=https;AccountName=yourstorageaccount;AccountKey=your-storage-key;EndpointSuffix=core.windows.net"
  AZURE_STORAGE_ACCOUNT_NAME: "yourstorageaccount"
  AZURE_STORAGE_ACCOUNT_KEY: "your-storage-account-key"

---
# =============================================================================
# SMTP Configuration
# =============================================================================

apiVersion: v1
kind: Secret
metadata:
  name: ai-ninja-smtp-secrets
  namespace: ai-ninja
  labels:
    app: ai-ninja
    tier: platform
type: Opaque
stringData:
  SMTP_HOST: "smtp.gmail.com"
  SMTP_PORT: "587"
  SMTP_USER: "your-email@gmail.com"
  SMTP_PASS: "your-app-password"
  SMTP_FROM: "noreply@ai-ninja.com"
  SMTP_FROM_NAME: "AI Answer Ninja"

---
# =============================================================================
# Monitoring Secrets
# =============================================================================

apiVersion: v1
kind: Secret
metadata:
  name: ai-ninja-monitoring-secrets
  namespace: ai-ninja
  labels:
    app: ai-ninja
    tier: platform
type: Opaque
stringData:
  # Grafana admin credentials
  GRAFANA_ADMIN_USER: "admin"
  GRAFANA_ADMIN_PASSWORD: "your-grafana-password"
  
  # Alert manager webhook
  ALERT_WEBHOOK_URL: "https://hooks.slack.com/services/YOUR/SLACK/WEBHOOK"
  
  # External monitoring services
  SENTRY_DSN: "https://your-sentry-dsn@sentry.io/project-id"
  DATADOG_API_KEY: "your-datadog-api-key"
  
  # SSL/TLS certificates (if using)
  TLS_CERT: |
    -----BEGIN CERTIFICATE-----
    # Your TLS certificate content here
    -----END CERTIFICATE-----
  TLS_KEY: |
    -----BEGIN PRIVATE KEY-----
    # Your TLS private key content here
    -----END PRIVATE KEY-----

---
# =============================================================================
# Development/Testing Secrets (should be in separate namespace for dev)
# =============================================================================

apiVersion: v1
kind: Secret
metadata:
  name: ai-ninja-dev-secrets
  namespace: ai-ninja
  labels:
    app: ai-ninja
    tier: platform
    environment: development
type: Opaque
stringData:
  # Test credentials
  TEST_USER_EMAIL: "test@ai-ninja.com"
  TEST_USER_PASSWORD: "test-password"
  
  # Mock API keys for development
  MOCK_AZURE_SPEECH_KEY: "mock-speech-key"
  MOCK_AZURE_OPENAI_KEY: "mock-openai-key"
  
  # Development database
  DEV_POSTGRES_PASSWORD: "dev-password"
  DEV_REDIS_PASSWORD: "dev-password"