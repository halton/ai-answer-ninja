apiVersion: v1
kind: ConfigMap
metadata:
  name: ai-ninja-config
  namespace: ai-ninja
data:
  # Environment settings
  NODE_ENV: "production"
  
  # Database configuration
  POSTGRES_DB: "ai_ninja"
  POSTGRES_USER: "postgres"
  
  # Redis configuration
  REDIS_HOST: "redis-service"
  REDIS_PORT: "6379"
  
  # Service discovery configuration
  CONSUL_HOST: "consul-service"
  CONSUL_PORT: "8500"
  
  # Application configuration
  JWT_EXPIRES_IN: "1h"
  
  # Performance settings
  MAX_CONNECTIONS: "200"
  KEEPALIVE_TIMEOUT: "65"
  
  # Logging configuration
  LOG_LEVEL: "info"
  LOG_FORMAT: "json"

---
apiVersion: v1
kind: ConfigMap
metadata:
  name: nginx-config
  namespace: ai-ninja
data:
  nginx.conf: |
    user nginx;
    worker_processes auto;
    error_log /var/log/nginx/error.log warn;
    pid /var/run/nginx.pid;
    
    events {
        worker_connections 2048;
        use epoll;
        multi_accept on;
    }
    
    http {
        include /etc/nginx/mime.types;
        default_type application/octet-stream;
        
        sendfile on;
        tcp_nopush on;
        tcp_nodelay on;
        keepalive_timeout 65;
        
        gzip on;
        gzip_types text/plain text/css application/json application/javascript;
        
        # Rate limiting
        limit_req_zone $binary_remote_addr zone=api:10m rate=30r/m;
        limit_req_zone $binary_remote_addr zone=realtime:10m rate=100r/m;
        
        # Upstream configuration will be injected here
        include /etc/nginx/conf.d/*.conf;
    }

---
apiVersion: v1
kind: ConfigMap
metadata:
  name: postgres-config
  namespace: ai-ninja
data:
  postgresql.conf: |
    # PostgreSQL Configuration for AI Ninja
    listen_addresses = '*'
    port = 5432
    max_connections = 200
    shared_buffers = 512MB
    effective_cache_size = 2GB
    work_mem = 8MB
    maintenance_work_mem = 128MB
    checkpoint_completion_target = 0.9
    wal_buffers = 16MB
    default_statistics_target = 100
    random_page_cost = 1.1
    effective_io_concurrency = 200
    
    # Logging
    log_statement = 'mod'
    log_min_duration_statement = 1000
    log_line_prefix = '%t [%p]: [%l-1] user=%u,db=%d,app=%a,client=%h '
    
    # Replication
    wal_level = replica
    max_wal_senders = 3
    max_replication_slots = 3
    
  pg_hba.conf: |
    # PostgreSQL Client Authentication Configuration
    local   all             all                                     trust
    host    all             all             127.0.0.1/32            md5
    host    all             all             ::1/128                 md5
    host    all             all             10.0.0.0/8              md5
    host    replication     replicator      10.0.0.0/8              md5

---
apiVersion: v1
kind: ConfigMap
metadata:
  name: redis-config
  namespace: ai-ninja
data:
  redis.conf: |
    # Redis Configuration for AI Ninja
    bind 0.0.0.0
    port 6379
    protected-mode no
    
    # Memory management
    maxmemory 1gb
    maxmemory-policy allkeys-lru
    
    # Persistence
    save 900 1
    save 300 10
    save 60 10000
    
    # Logging
    loglevel notice
    
    # Performance
    tcp-keepalive 300
    timeout 0