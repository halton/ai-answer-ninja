# AI Answer Ninja - Kubernetes Secrets
# Note: In production, use external secret management (Azure Key Vault, etc.)

apiVersion: v1
kind: Secret
metadata:
  name: ai-ninja-secrets
  namespace: ai-ninja
type: Opaque
stringData:
  # Database credentials
  POSTGRES_PASSWORD: "CHANGE_ME_IN_PRODUCTION"
  POSTGRES_REPLICATION_PASSWORD: "CHANGE_ME_IN_PRODUCTION"
  
  # Redis credentials
  REDIS_PASSWORD: "CHANGE_ME_IN_PRODUCTION"
  
  # JWT configuration
  JWT_SECRET: "CHANGE_ME_IN_PRODUCTION_MUST_BE_STRONG"
  
  # Azure service credentials
  AZURE_COMMUNICATION_CONNECTION_STRING: "CHANGE_ME_IN_PRODUCTION"
  AZURE_SPEECH_KEY: "CHANGE_ME_IN_PRODUCTION"
  AZURE_SPEECH_REGION: "eastus2"
  AZURE_OPENAI_KEY: "CHANGE_ME_IN_PRODUCTION"
  AZURE_OPENAI_ENDPOINT: "https://your-openai.openai.azure.com/"
  AZURE_TEXT_ANALYTICS_KEY: "CHANGE_ME_IN_PRODUCTION"
  AZURE_TEXT_ANALYTICS_ENDPOINT: "https://your-textanalytics.cognitiveservices.azure.com/"
  AZURE_STORAGE_CONNECTION_STRING: "CHANGE_ME_IN_PRODUCTION"
  
  # SMTP configuration for notifications
  SMTP_HOST: "smtp.gmail.com"
  SMTP_PORT: "587"
  SMTP_USER: "CHANGE_ME_IN_PRODUCTION"
  SMTP_PASS: "CHANGE_ME_IN_PRODUCTION"
  
  # Alert webhook URL
  ALERT_WEBHOOK_URL: "https://hooks.slack.com/services/YOUR/WEBHOOK/URL"

---
apiVersion: v1
kind: Secret
metadata:
  name: registry-credentials
  namespace: ai-ninja
type: kubernetes.io/dockerconfigjson
stringData:
  .dockerconfigjson: |
    {
      "auths": {
        "your-registry.azurecr.io": {
          "username": "your-registry-username",
          "password": "your-registry-password",
          "email": "your-email@domain.com"
        }
      }
    }