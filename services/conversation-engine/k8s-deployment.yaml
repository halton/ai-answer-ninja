# Kubernetes deployment for Conversation Engine Service
apiVersion: apps/v1
kind: Deployment
metadata:
  name: conversation-engine
  namespace: ai-answer-ninja
  labels:
    app: conversation-engine
    service: conversation-engine
    version: v1
spec:
  replicas: 3
  selector:
    matchLabels:
      app: conversation-engine
  template:
    metadata:
      labels:
        app: conversation-engine
        service: conversation-engine
        version: v1
    spec:
      containers:
      - name: conversation-engine
        image: ai-answer-ninja/conversation-engine:latest
        ports:
        - containerPort: 3003
          name: http
        env:
        - name: DEBUG
          value: "false"
        - name: PORT
          value: "3003"
        - name: HOST
          value: "0.0.0.0"
        - name: LOG_LEVEL
          value: "INFO"
        - name: DATABASE_URL
          valueFrom:
            secretKeyRef:
              name: conversation-engine-secrets
              key: database-url
        - name: REDIS_URL
          valueFrom:
            secretKeyRef:
              name: conversation-engine-secrets
              key: redis-url
        - name: AZURE_OPENAI_ENDPOINT
          valueFrom:
            secretKeyRef:
              name: conversation-engine-secrets
              key: azure-openai-endpoint
        - name: AZURE_OPENAI_KEY
          valueFrom:
            secretKeyRef:
              name: conversation-engine-secrets
              key: azure-openai-key
        - name: AZURE_TEXT_ANALYTICS_ENDPOINT
          valueFrom:
            secretKeyRef:
              name: conversation-engine-secrets
              key: azure-text-analytics-endpoint
        - name: AZURE_TEXT_ANALYTICS_KEY
          valueFrom:
            secretKeyRef:
              name: conversation-engine-secrets
              key: azure-text-analytics-key
        - name: JWT_SECRET_KEY
          valueFrom:
            secretKeyRef:
              name: conversation-engine-secrets
              key: jwt-secret-key
        - name: ENABLE_PROMETHEUS
          value: "true"
        - name: MAX_CONCURRENT_CONVERSATIONS
          value: "100"
        - name: CACHE_TTL_SECONDS
          value: "300"
        resources:
          requests:
            memory: "512Mi"
            cpu: "250m"
          limits:
            memory: "1Gi"
            cpu: "500m"
        livenessProbe:
          httpGet:
            path: /health/liveness
            port: 3003
          initialDelaySeconds: 30
          periodSeconds: 10
          timeoutSeconds: 5
          failureThreshold: 3
        readinessProbe:
          httpGet:
            path: /health/readiness
            port: 3003
          initialDelaySeconds: 10
          periodSeconds: 5
          timeoutSeconds: 3
          failureThreshold: 3
        volumeMounts:
        - name: logs
          mountPath: /app/logs
      volumes:
      - name: logs
        emptyDir: {}
      imagePullSecrets:
      - name: registry-secret

---
apiVersion: v1
kind: Service
metadata:
  name: conversation-engine-service
  namespace: ai-answer-ninja
  labels:
    app: conversation-engine
spec:
  selector:
    app: conversation-engine
  ports:
  - name: http
    port: 80
    targetPort: 3003
    protocol: TCP
  type: ClusterIP

---
apiVersion: v1
kind: Secret
metadata:
  name: conversation-engine-secrets
  namespace: ai-answer-ninja
type: Opaque
stringData:
  database-url: "postgresql+asyncpg://user:password@postgres:5432/ai_answer_ninja"
  redis-url: "redis://redis:6379/0"
  azure-openai-endpoint: "https://your-openai-resource.openai.azure.com/"
  azure-openai-key: "your-openai-api-key"
  azure-text-analytics-endpoint: "https://your-text-analytics.cognitiveservices.azure.com/"
  azure-text-analytics-key: "your-text-analytics-key"
  jwt-secret-key: "your-super-secret-jwt-key-change-this-in-production"

---
apiVersion: v1
kind: ConfigMap
metadata:
  name: conversation-engine-config
  namespace: ai-answer-ninja
data:
  app-config.yaml: |
    service:
      name: conversation-engine
      version: "1.0.0"
      port: 3003
    
    conversation:
      max_history: 10
      timeout_seconds: 5
      cache_ttl_seconds: 300
    
    performance:
      max_concurrent: 100
      response_cache_size: 1000
    
    ai:
      temperature: 0.7
      max_tokens: 150
    
    monitoring:
      prometheus_enabled: true
      metrics_path: "/metrics"

---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: conversation-engine-ingress
  namespace: ai-answer-ninja
  annotations:
    kubernetes.io/ingress.class: "nginx"
    nginx.ingress.kubernetes.io/ssl-redirect: "true"
    nginx.ingress.kubernetes.io/use-regex: "true"
    nginx.ingress.kubernetes.io/rate-limit: "100"
    nginx.ingress.kubernetes.io/rate-limit-window: "1m"
spec:
  tls:
  - hosts:
    - api.ai-answer-ninja.com
    secretName: tls-secret
  rules:
  - host: api.ai-answer-ninja.com
    http:
      paths:
      - path: /conversation
        pathType: Prefix
        backend:
          service:
            name: conversation-engine-service
            port:
              number: 80

---
apiVersion: autoscaling/v2
kind: HorizontalPodAutoscaler
metadata:
  name: conversation-engine-hpa
  namespace: ai-answer-ninja
spec:
  scaleTargetRef:
    apiVersion: apps/v1
    kind: Deployment
    name: conversation-engine
  minReplicas: 3
  maxReplicas: 10
  metrics:
  - type: Resource
    resource:
      name: cpu
      target:
        type: Utilization
        averageUtilization: 70
  - type: Resource
    resource:
      name: memory
      target:
        type: Utilization
        averageUtilization: 80
  behavior:
    scaleDown:
      stabilizationWindowSeconds: 300
      policies:
      - type: Percent
        value: 10
        periodSeconds: 60
    scaleUp:
      stabilizationWindowSeconds: 60
      policies:
      - type: Percent
        value: 50
        periodSeconds: 60

---
apiVersion: policy/v1
kind: PodDisruptionBudget
metadata:
  name: conversation-engine-pdb
  namespace: ai-answer-ninja
spec:
  minAvailable: 2
  selector:
    matchLabels:
      app: conversation-engine