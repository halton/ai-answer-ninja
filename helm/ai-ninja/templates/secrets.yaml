# AI Answer Ninja - Application Secrets
# Note: In production, use external secret management

{{- if not .Values.config.externalSecrets.enabled }}
apiVersion: v1
kind: Secret
metadata:
  name: {{ include "ai-ninja.fullname" . }}-secrets
  namespace: {{ .Release.Namespace }}
  labels:
    {{- include "ai-ninja.labels" . | nindent 4 }}
type: Opaque
stringData:
  # Azure service credentials
  AZURE_COMMUNICATION_CONNECTION_STRING: {{ .Values.secrets.azure.communicationConnectionString | quote }}
  AZURE_SPEECH_KEY: {{ .Values.secrets.azure.speechKey | quote }}
  AZURE_SPEECH_REGION: {{ .Values.secrets.azure.speechRegion | quote }}
  AZURE_OPENAI_KEY: {{ .Values.secrets.azure.openaiKey | quote }}
  AZURE_OPENAI_ENDPOINT: {{ .Values.secrets.azure.openaiEndpoint | quote }}
  AZURE_TEXT_ANALYTICS_KEY: {{ .Values.secrets.azure.textAnalyticsKey | quote }}
  AZURE_TEXT_ANALYTICS_ENDPOINT: {{ .Values.secrets.azure.textAnalyticsEndpoint | quote }}
  AZURE_STORAGE_CONNECTION_STRING: {{ .Values.secrets.azure.storageConnectionString | quote }}
  
  # Authentication
  JWT_SECRET: {{ .Values.secrets.auth.jwtSecret | quote }}
  
  # SMTP configuration
  SMTP_HOST: {{ .Values.secrets.smtp.host | quote }}
  SMTP_PORT: {{ .Values.secrets.smtp.port | quote }}
  SMTP_USER: {{ .Values.secrets.smtp.user | quote }}
  SMTP_PASS: {{ .Values.secrets.smtp.password | quote }}
  
  # Alert webhook
  ALERT_WEBHOOK_URL: {{ .Values.secrets.monitoring.alertWebhookUrl | quote }}

---
# Registry credentials secret
apiVersion: v1
kind: Secret
metadata:
  name: {{ include "ai-ninja.fullname" . }}-registry-credentials
  namespace: {{ .Release.Namespace }}
  labels:
    {{- include "ai-ninja.labels" . | nindent 4 }}
type: kubernetes.io/dockerconfigjson
stringData:
  .dockerconfigjson: |
    {
      "auths": {
        "{{ .Values.global.imageRegistry }}": {
          "username": "{{ .Values.secrets.registry.username }}",
          "password": "{{ .Values.secrets.registry.password }}",
          "email": "{{ .Values.secrets.registry.email }}"
        }
      }
    }

---
# Basic auth secret for dashboard access
apiVersion: v1
kind: Secret
metadata:
  name: basic-auth-secret
  namespace: {{ .Release.Namespace }}
  labels:
    {{- include "ai-ninja.labels" . | nindent 4 }}
type: Opaque
data:
  auth: {{ .Values.secrets.dashboard.basicAuth | b64enc }}

{{- else }}
# External secrets configuration (e.g., Azure Key Vault)
apiVersion: external-secrets.io/v1beta1
kind: ExternalSecret
metadata:
  name: {{ include "ai-ninja.fullname" . }}-external-secrets
  namespace: {{ .Release.Namespace }}
  labels:
    {{- include "ai-ninja.labels" . | nindent 4 }}
spec:
  refreshInterval: 1h
  secretStoreRef:
    name: azure-keyvault-store
    kind: SecretStore
  target:
    name: {{ include "ai-ninja.fullname" . }}-secrets
    creationPolicy: Owner
  data:
  - secretKey: AZURE_COMMUNICATION_CONNECTION_STRING
    remoteRef:
      key: azure-communication-connection-string
  - secretKey: AZURE_SPEECH_KEY
    remoteRef:
      key: azure-speech-key
  - secretKey: AZURE_SPEECH_REGION
    remoteRef:
      key: azure-speech-region
  - secretKey: AZURE_OPENAI_KEY
    remoteRef:
      key: azure-openai-key
  - secretKey: AZURE_OPENAI_ENDPOINT
    remoteRef:
      key: azure-openai-endpoint
  - secretKey: JWT_SECRET
    remoteRef:
      key: jwt-secret
{{- end }}