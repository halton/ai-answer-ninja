
services:
  # Kong API Gateway
  kong:
    image: kong:3.4.2-alpine
    environment:
      KONG_DATABASE: "off"
      KONG_DECLARATIVE_CONFIG: /kong/declarative/kong.yml
      KONG_PROXY_ACCESS_LOG: /dev/stdout
      KONG_ADMIN_ACCESS_LOG: /dev/stdout
      KONG_PROXY_ERROR_LOG: /dev/stderr
      KONG_ADMIN_ERROR_LOG: /dev/stderr
      KONG_ADMIN_LISTEN: "0.0.0.0:8001"
      KONG_PROXY_LISTEN: "0.0.0.0:8000, 0.0.0.0:8443 ssl"
      KONG_SSL_CERT: /etc/ssl/certs/kong.crt
      KONG_SSL_CERT_KEY: /etc/ssl/private/kong.key
      KONG_PLUGINS: "bundled"
      KONG_LOG_LEVEL: "info"
      KONG_NGINX_WORKER_PROCESSES: "auto"
      KONG_NGINX_HTTP_CLIENT_MAX_BODY_SIZE: "100m"
      
      # Rate limiting
      KONG_REDIS_HOST: redis
      KONG_REDIS_PORT: 6379
      KONG_REDIS_DATABASE: 1
      
      # Environment variables for configuration
      AZURE_WEBHOOK_API_KEY: ${AZURE_WEBHOOK_API_KEY:-default-webhook-key}
      ADMIN_PANEL_API_KEY: ${ADMIN_PANEL_API_KEY:-default-admin-key}
      JWT_SECRET_KEY: ${JWT_SECRET_KEY:-default-jwt-secret}
    ports:
      - "80:8000"
      - "443:8443"
      - "8001:8001"  # Admin API
    volumes:
      - ./kong.yml:/kong/declarative/kong.yml:ro
      - ./ssl:/etc/ssl:ro
      - kong_logs:/var/log/kong
    depends_on:
      - redis
    networks:
      - ai-ninja-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8001/status"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
    deploy:
      resources:
        limits:
          memory: 512M
          cpus: '0.5'
        reservations:
          memory: 256M
          cpus: '0.25'

  # Nginx API Gateway (Backup)
  nginx:
    image: nginx:1.25.3-alpine
    profiles:
      - backup
    ports:
      - "8080:80"
      - "8443:443"
      - "8090:8080"  # Status page
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
      - ./proxy_params:/etc/nginx/proxy_params:ro
      - ./ssl:/etc/ssl:ro
      - nginx_cache:/var/cache/nginx
      - nginx_logs:/var/log/nginx
    networks:
      - ai-ninja-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 30s
    deploy:
      resources:
        limits:
          memory: 256M
          cpus: '0.3'
        reservations:
          memory: 128M
          cpus: '0.15'

  # Redis for rate limiting and session storage
  redis:
    image: redis:7.2.3-alpine
    command: redis-server --appendonly yes --maxmemory 256mb --maxmemory-policy allkeys-lru
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
      - ./redis.conf:/usr/local/etc/redis/redis.conf:ro
    networks:
      - ai-ninja-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 3
    deploy:
      resources:
        limits:
          memory: 512M
          cpus: '0.3'
        reservations:
          memory: 256M
          cpus: '0.15'

  # Kong Prometheus Exporter
  kong-prometheus-exporter:
    image: kong/kong-prometheus-plugin:1.8.0
    environment:
      KONG_ADMIN_URL: http://kong:8001
    ports:
      - "9542:9542"
    depends_on:
      - kong
    networks:
      - ai-ninja-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:9542/metrics"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Traffic Generator for Testing
  traffic-generator:
    image: alpine/curl:latest
    profiles:
      - testing
    command: >
      sh -c "
        while true; do
          curl -s -o /dev/null -w 'Status: %{http_code}, Time: %{time_total}s\n' http://kong:8000/health
          sleep 5
        done
      "
    depends_on:
      - kong
    networks:
      - ai-ninja-network
    restart: "no"

volumes:
  kong_logs:
    driver: local
  nginx_cache:
    driver: local
  nginx_logs:
    driver: local
  redis_data:
    driver: local

networks:
  ai-ninja-network:
    driver: bridge
    ipam:
      config:
        - subnet: 172.20.0.0/16
    labels:
      - "com.ai-ninja.network=api-gateway"

# Secrets (for production use)
secrets:
  kong_ssl_cert:
    file: ./ssl/kong.crt
  kong_ssl_key:
    file: ./ssl/kong.key
  jwt_secret:
    external: true