# AI Answer Ninja - Prometheus Configuration
# Service discovery and load balancing monitoring

global:
  scrape_interval: 15s
  evaluation_interval: 15s
  external_labels:
    cluster: 'ai-ninja-production'
    environment: 'production'

# Alertmanager configuration
alerting:
  alertmanagers:
    - static_configs:
        - targets:
          - alertmanager:9093

# Load alerting rules
rule_files:
  - "alerts/*.yml"

# Service discovery and scraping configuration
scrape_configs:
  # Prometheus self-monitoring
  - job_name: 'prometheus'
    static_configs:
      - targets: ['localhost:9090']

  # Kubernetes API server
  - job_name: 'kubernetes-apiserver'
    kubernetes_sd_configs:
      - role: endpoints
        namespaces:
          names:
            - default
    scheme: https
    tls_config:
      ca_file: /var/run/secrets/kubernetes.io/serviceaccount/ca.crt
    bearer_token_file: /var/run/secrets/kubernetes.io/serviceaccount/token
    relabel_configs:
      - source_labels: [__meta_kubernetes_namespace, __meta_kubernetes_service_name, __meta_kubernetes_endpoint_port_name]
        action: keep
        regex: default;kubernetes;https

  # Kubernetes nodes
  - job_name: 'kubernetes-nodes'
    kubernetes_sd_configs:
      - role: node
    scheme: https
    tls_config:
      ca_file: /var/run/secrets/kubernetes.io/serviceaccount/ca.crt
    bearer_token_file: /var/run/secrets/kubernetes.io/serviceaccount/token
    relabel_configs:
      - action: labelmap
        regex: __meta_kubernetes_node_label_(.+)

  # Kubernetes pods (with annotations)
  - job_name: 'kubernetes-pods'
    kubernetes_sd_configs:
      - role: pod
        namespaces:
          names:
            - ai-ninja
    relabel_configs:
      - source_labels: [__meta_kubernetes_pod_annotation_prometheus_io_scrape]
        action: keep
        regex: true
      - source_labels: [__meta_kubernetes_pod_annotation_prometheus_io_path]
        action: replace
        target_label: __metrics_path__
        regex: (.+)
      - source_labels: [__address__, __meta_kubernetes_pod_annotation_prometheus_io_port]
        action: replace
        regex: ([^:]+)(?::\d+)?;(\d+)
        replacement: $1:$2
        target_label: __address__
      - action: labelmap
        regex: __meta_kubernetes_pod_label_(.+)
      - source_labels: [__meta_kubernetes_namespace]
        action: replace
        target_label: kubernetes_namespace
      - source_labels: [__meta_kubernetes_pod_name]
        action: replace
        target_label: kubernetes_pod_name

  # Core Services Monitoring
  - job_name: 'phone-gateway'
    kubernetes_sd_configs:
      - role: endpoints
        namespaces:
          names:
            - ai-ninja
    relabel_configs:
      - source_labels: [__meta_kubernetes_service_name]
        action: keep
        regex: phone-gateway-service
      - source_labels: [__meta_kubernetes_endpoint_port_name]
        action: keep
        regex: http
    metrics_path: /metrics
    scrape_interval: 15s

  - job_name: 'realtime-processor'
    kubernetes_sd_configs:
      - role: endpoints
        namespaces:
          names:
            - ai-ninja
    relabel_configs:
      - source_labels: [__meta_kubernetes_service_name]
        action: keep
        regex: realtime-processor-service
      - source_labels: [__meta_kubernetes_endpoint_port_name]
        action: keep
        regex: http
    metrics_path: /metrics
    scrape_interval: 5s  # More frequent for critical service

  - job_name: 'conversation-engine'
    kubernetes_sd_configs:
      - role: endpoints
        namespaces:
          names:
            - ai-ninja
    relabel_configs:
      - source_labels: [__meta_kubernetes_service_name]
        action: keep
        regex: conversation-engine-service
      - source_labels: [__meta_kubernetes_endpoint_port_name]
        action: keep
        regex: http
    metrics_path: /metrics
    scrape_interval: 15s

  - job_name: 'profile-analytics'
    kubernetes_sd_configs:
      - role: endpoints
        namespaces:
          names:
            - ai-ninja
    relabel_configs:
      - source_labels: [__meta_kubernetes_service_name]
        action: keep
        regex: profile-analytics-service
      - source_labels: [__meta_kubernetes_endpoint_port_name]
        action: keep
        regex: http
    metrics_path: /metrics
    scrape_interval: 30s

  # Support Services Monitoring
  - job_name: 'user-management'
    kubernetes_sd_configs:
      - role: endpoints
        namespaces:
          names:
            - ai-ninja
    relabel_configs:
      - source_labels: [__meta_kubernetes_service_name]
        action: keep
        regex: user-management-service
    metrics_path: /metrics
    scrape_interval: 30s

  - job_name: 'smart-whitelist'
    kubernetes_sd_configs:
      - role: endpoints
        namespaces:
          names:
            - ai-ninja
    relabel_configs:
      - source_labels: [__meta_kubernetes_service_name]
        action: keep
        regex: smart-whitelist-service
    metrics_path: /metrics
    scrape_interval: 30s

  # Infrastructure Monitoring
  - job_name: 'nginx-ingress'
    kubernetes_sd_configs:
      - role: pod
        namespaces:
          names:
            - ai-ninja
    relabel_configs:
      - source_labels: [__meta_kubernetes_pod_label_app]
        action: keep
        regex: nginx-ingress
      - source_labels: [__meta_kubernetes_pod_container_port_number]
        action: keep
        regex: "8080"
    metrics_path: /metrics
    scrape_interval: 10s

  - job_name: 'postgresql'
    static_configs:
      - targets: ['postgres-exporter:9187']
    metrics_path: /metrics
    scrape_interval: 30s

  - job_name: 'redis'
    static_configs:
      - targets: ['redis-exporter:9121']
    metrics_path: /metrics
    scrape_interval: 30s

  # Consul service discovery monitoring
  - job_name: 'consul'
    consul_sd_configs:
      - server: 'consul:8500'
        services: []
    relabel_configs:
      - source_labels: [__meta_consul_tags]
        regex: .*,monitoring,.*
        action: keep
      - source_labels: [__meta_consul_service]
        target_label: service
      - source_labels: [__meta_consul_node]
        target_label: node

# Remote write configuration (for long-term storage)
remote_write:
  - url: "http://cortex:9009/api/prom/push"
    write_relabel_configs:
      - source_labels: [__name__]
        regex: 'ai_ninja_.*'
        action: keep