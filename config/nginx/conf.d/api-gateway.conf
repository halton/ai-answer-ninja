# AI Answer Ninja - API Gateway Configuration
# Service routing with health checks and advanced load balancing

# Main API Gateway Server
server {
    listen 80;
    listen 443 ssl http2;
    server_name localhost api.ai-ninja.local;

    # SSL Configuration (if certificates available)
    ssl_certificate /etc/nginx/ssl/server.crt;
    ssl_certificate_key /etc/nginx/ssl/server.key;
    ssl_session_cache shared:SSL:1m;
    ssl_session_timeout 5m;
    ssl_protocols TLSv1.2 TLSv1.3;
    ssl_ciphers ECDHE-RSA-AES128-GCM-SHA256:ECDHE-RSA-AES256-GCM-SHA384;
    ssl_prefer_server_ciphers on;

    # Security headers
    add_header X-Frame-Options DENY;
    add_header X-Content-Type-Options nosniff;
    add_header X-XSS-Protection "1; mode=block";
    add_header Strict-Transport-Security "max-age=31536000; includeSubDomains";

    # Rate limiting
    limit_conn conn_limit 20;

    # =========================================
    # Health Check Endpoints
    # =========================================
    
    location /health {
        access_log off;
        return 200 "healthy\n";
        add_header Content-Type text/plain;
    }

    location /health/detailed {
        access_log off;
        default_type application/json;
        return 200 '{"status":"healthy","timestamp":"$time_iso8601","nginx_version":"$nginx_version"}';
    }

    # Service-specific health checks
    location ~ ^/health/([\w-]+)$ {
        set $service $1;
        proxy_pass http://$service:300$arg_port/health;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_connect_timeout 2s;
        proxy_read_timeout 5s;
        access_log off;
    }

    # =========================================
    # Core Services Routing
    # =========================================

    # Phone Gateway Service
    location /api/v1/phone/ {
        limit_req zone=api_limit burst=10 nodelay;
        
        proxy_pass http://phone_gateway_upstream;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        
        # WebRTC and real-time communication optimizations
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection "upgrade";
        proxy_cache_bypass $http_upgrade;
        
        # Timeouts for phone operations
        proxy_connect_timeout 5s;
        proxy_send_timeout 60s;
        proxy_read_timeout 60s;
    }

    # Real-time Processor Service (Critical Path)
    location /api/v1/realtime/ {
        limit_req zone=realtime_limit burst=50 nodelay;
        
        proxy_pass http://realtime_processor_upstream;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        
        # WebSocket support for real-time audio streaming
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection "upgrade";
        proxy_cache_bypass $http_upgrade;
        proxy_buffering off;
        
        # Optimized for low latency
        proxy_connect_timeout 1s;
        proxy_send_timeout 5s;
        proxy_read_timeout 30s;
        
        # Enable response buffering for better performance
        proxy_request_buffering off;
        proxy_max_temp_file_size 0;
    }

    # Conversation Engine Service
    location /api/v1/conversation/ {
        limit_req zone=api_limit burst=20 nodelay;
        
        proxy_pass http://conversation_engine_upstream;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        
        # AI processing timeouts
        proxy_connect_timeout 5s;
        proxy_send_timeout 30s;
        proxy_read_timeout 45s;
        
        # Cache responses when appropriate
        proxy_cache_methods GET HEAD;
        proxy_cache_valid 200 302 5m;
        proxy_cache_valid 404 1m;
    }

    # Profile Analytics Service
    location /api/v1/analytics/ {
        limit_req zone=api_limit burst=15 nodelay;
        
        proxy_pass http://profile_analytics_upstream;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        
        # Analytics can take longer
        proxy_connect_timeout 5s;
        proxy_send_timeout 60s;
        proxy_read_timeout 90s;
    }

    # =========================================
    # Support Services Routing
    # =========================================

    # User Management Service (with session affinity)
    location /api/v1/users/ {
        limit_req zone=api_limit burst=10 nodelay;
        
        proxy_pass http://user_management_upstream;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        
        # Session management
        proxy_cookie_path / "/; secure; HttpOnly; SameSite=strict";
    }

    # Authentication endpoints
    location /api/v1/auth/ {
        limit_req zone=api_limit burst=5 nodelay;
        
        proxy_pass http://user_management_upstream;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
    }

    # Smart Whitelist Service
    location /api/v1/whitelist/ {
        limit_req zone=api_limit burst=20 nodelay;
        
        proxy_pass http://smart_whitelist_upstream;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_Set_header X-Forwarded-Proto $scheme;
    }

    # =========================================
    # Platform Services Routing
    # =========================================

    # Configuration Service
    location /api/v1/config/ {
        limit_req zone=api_limit burst=5 nodelay;
        
        proxy_pass http://configuration_upstream;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        
        # Cache configuration responses
        proxy_cache_valid 200 30m;
        proxy_cache_valid 404 5m;
    }

    # Storage Service
    location /api/v1/storage/ {
        limit_req zone=api_limit burst=10 nodelay;
        
        # Increase limits for file uploads
        client_max_body_size 100m;
        client_body_buffer_size 1m;
        
        proxy_pass http://storage_upstream;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        
        # File operation timeouts
        proxy_connect_timeout 10s;
        proxy_send_timeout 120s;
        proxy_read_timeout 120s;
        
        # Disable buffering for file streams
        proxy_request_buffering off;
    }

    # Monitoring Service
    location /api/v1/monitoring/ {
        limit_req zone=api_limit burst=10 nodelay;
        
        proxy_pass http://monitoring_upstream;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
    }

    # Prometheus metrics endpoint
    location /metrics {
        proxy_pass http://monitoring_upstream/metrics;
        proxy_set_header Host $host;
        access_log off;
    }

    # Grafana dashboard
    location /dashboard/ {
        proxy_pass http://monitoring:3000/;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
    }

    # =========================================
    # Static Content and Default
    # =========================================

    # Serve static content efficiently
    location /static/ {
        root /var/www/html;
        expires 1y;
        add_header Cache-Control "public, immutable";
        access_log off;
    }

    # Default location - return API information
    location / {
        default_type application/json;
        return 200 '{"service":"AI Answer Ninja API Gateway","version":"1.0.0","timestamp":"$time_iso8601","status":"ready"}';
    }

    # Handle 404s gracefully
    error_page 404 /404.json;
    location = /404.json {
        default_type application/json;
        return 404 '{"error":"Not Found","message":"The requested endpoint was not found","timestamp":"$time_iso8601"}';
    }

    # Handle 50x errors
    error_page 500 502 503 504 /50x.json;
    location = /50x.json {
        default_type application/json;
        return 500 '{"error":"Internal Server Error","message":"A server error occurred","timestamp":"$time_iso8601"}';
    }
}

# =========================================
# Service-specific Virtual Hosts
# =========================================

# Direct service access (for development/debugging)
server {
    listen 8080;
    server_name localhost;
    
    location /phone-gateway/ {
        proxy_pass http://phone-gateway:3001/;
    }
    
    location /realtime-processor/ {
        proxy_pass http://realtime-processor:3002/;
    }
    
    location /conversation-engine/ {
        proxy_pass http://conversation-engine:3003/;
    }
    
    location /profile-analytics/ {
        proxy_pass http://profile-analytics:3004/;
    }
    
    location /user-management/ {
        proxy_pass http://user-management:3005/;
    }
    
    location /smart-whitelist/ {
        proxy_pass http://smart-whitelist:3006/;
    }
    
    location /configuration/ {
        proxy_pass http://configuration:3007/;
    }
    
    location /storage/ {
        proxy_pass http://storage:3008/;
    }
    
    location /monitoring/ {
        proxy_pass http://monitoring:3009/;
    }
}